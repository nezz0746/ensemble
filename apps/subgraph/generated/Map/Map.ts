// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LocalRecordDeployed extends ethereum.Event {
  get params(): LocalRecordDeployed__Params {
    return new LocalRecordDeployed__Params(this);
  }
}

export class LocalRecordDeployed__Params {
  _event: LocalRecordDeployed;

  constructor(event: LocalRecordDeployed) {
    this._event = event;
  }

  get tileAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get geohash(): string {
    return this._event.parameters[2].value.toString();
  }

  get account(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class LocalRecordTokenDeployed extends ethereum.Event {
  get params(): LocalRecordTokenDeployed__Params {
    return new LocalRecordTokenDeployed__Params(this);
  }
}

export class LocalRecordTokenDeployed__Params {
  _event: LocalRecordTokenDeployed;

  constructor(event: LocalRecordTokenDeployed) {
    this._event = event;
  }

  get tileAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get geohash(): string {
    return this._event.parameters[1].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TileCreated extends ethereum.Event {
  get params(): TileCreated__Params {
    return new TileCreated__Params(this);
  }
}

export class TileCreated__Params {
  _event: TileCreated;

  constructor(event: TileCreated) {
    this._event = event;
  }

  get stateAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get verifier(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get baseURI(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class Map extends ethereum.SmartContract {
  static bind(address: Address): Map {
    return new Map("Map", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  TILE_CREATOR(): Bytes {
    let result = super.call("TILE_CREATOR", "TILE_CREATOR():(bytes32)", []);

    return result[0].toBytes();
  }

  try_TILE_CREATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("TILE_CREATOR", "TILE_CREATOR():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  computeLocalRecord(account: Address, geohash: string): Address {
    let result = super.call(
      "computeLocalRecord",
      "computeLocalRecord(address,string):(address)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromString(geohash)]
    );

    return result[0].toAddress();
  }

  try_computeLocalRecord(
    account: Address,
    geohash: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "computeLocalRecord",
      "computeLocalRecord(address,string):(address)",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromString(geohash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  computeRecordTileAddress(geohash: string): Address {
    let result = super.call(
      "computeRecordTileAddress",
      "computeRecordTileAddress(string):(address)",
      [ethereum.Value.fromString(geohash)]
    );

    return result[0].toAddress();
  }

  try_computeRecordTileAddress(geohash: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "computeRecordTileAddress",
      "computeRecordTileAddress(string):(address)",
      [ethereum.Value.fromString(geohash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createTile(verifier: Address, baseURI: string): Address {
    let result = super.call(
      "createTile",
      "createTile(address,string):(address)",
      [ethereum.Value.fromAddress(verifier), ethereum.Value.fromString(baseURI)]
    );

    return result[0].toAddress();
  }

  try_createTile(
    verifier: Address,
    baseURI: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createTile",
      "createTile(address,string):(address)",
      [ethereum.Value.fromAddress(verifier), ethereum.Value.fromString(baseURI)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get recordTileConfiguration(): ConstructorCallRecordTileConfigurationStruct {
    return changetype<ConstructorCallRecordTileConfigurationStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get minPrecision(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maxPrecision(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCallRecordTileConfigurationStruct extends ethereum.Tuple {
  get registry(): Address {
    return this[0].toAddress();
  }

  get accountProxy(): Address {
    return this[1].toAddress();
  }

  get implementation(): Address {
    return this[2].toAddress();
  }
}

export class CreateTileCall extends ethereum.Call {
  get inputs(): CreateTileCall__Inputs {
    return new CreateTileCall__Inputs(this);
  }

  get outputs(): CreateTileCall__Outputs {
    return new CreateTileCall__Outputs(this);
  }
}

export class CreateTileCall__Inputs {
  _call: CreateTileCall;

  constructor(call: CreateTileCall) {
    this._call = call;
  }

  get verifier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get baseURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateTileCall__Outputs {
  _call: CreateTileCall;

  constructor(call: CreateTileCall) {
    this._call = call;
  }

  get tileAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class MoveCall extends ethereum.Call {
  get inputs(): MoveCall__Inputs {
    return new MoveCall__Inputs(this);
  }

  get outputs(): MoveCall__Outputs {
    return new MoveCall__Outputs(this);
  }
}

export class MoveCall__Inputs {
  _call: MoveCall;

  constructor(call: MoveCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get state(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get geohash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class MoveCall__Outputs {
  _call: MoveCall;

  constructor(call: MoveCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

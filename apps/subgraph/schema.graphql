type Agent @entity(immutable: false) {
  id: Bytes! # address
  currentGeohash: String! # string
  records: [LocalRecord!]! @derivedFrom(field: "owner")
  states: [StateAgent!]! @derivedFrom(field: "agent")
}

# ---------------- NETWORK STATES -------------------

type StateAgent @entity(immutable: false) {
  id: Bytes! # address
  state: NetworkState!
  agent: Agent!
}

type NetworkState @entity(immutable: false) {
  id: Bytes! # tileAddress
  verifier: Bytes! # address
  creator: Bytes! # address
  baseURI: String! # string
  metadata: NetworkStateMetadata
  population: BigInt! # uint256
  agents: [StateAgent!]! @derivedFrom(field: "state")
  travels: [NetworkStateTravel!]! @derivedFrom(field: "state")
}

type NetworkStateMetadata @entity(immutable: true) {
  id: String! # cid
  name: String! # string
  description: String! # string
  image: String! # string
  imageGateway: String! # string
  manifesto: String! # string
  manifestoGateway: String! # string
}

type NetworkStateTravel @entity(immutable: true) {
  id: Bytes! # tileAddress
  state: NetworkState! # tileAddress
  account: Bytes! # address
  previousGeohash: String! # string
  nextGeohash: String! # string
}

# --------------------- RECORD ---------------------

type LocalRecord @entity(immutable: false) {
  id: Bytes! # account-addess
  owner: Agent!
  geohash: String! # string
  localRecordERC721: String! # address
}

# GENERATED

type RecordTileCreated @entity(immutable: true) {
  id: Bytes!
  tileAddress: Bytes! # address
  geohash: String! # string
  creator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RecordTileEntered @entity(immutable: true) {
  id: Bytes!
  tileAddress: Bytes! # address
  recipient: Bytes! # address
  geohash: String! # string
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TileCreated @entity(immutable: true) {
  id: Bytes!
  tileAddress: Bytes! # address
  verifier: Bytes! # address
  baseURI: String! # string
  creator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
